{"version":3,"file":"emergency-alerts-card.js","sources":["node_modules/@lit/reactive-element/css-tag.js","node_modules/@lit/reactive-element/reactive-element.js","node_modules/lit-html/lit-html.js","node_modules/lit-element/lit-element.js","src/styles.ts","src/services/alert-service.ts","src/utils/filters.ts","src/utils/sorters.ts","src/utils/groupers.ts","src/utils/entity-discovery.ts","src/emergency-alerts-card.ts","src/utils/formatters.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),o=new WeakMap;class n{constructor(t,e,o){if(this._$cssResult$=!0,o!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&o.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new n(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const o=1===t.length?t[0]:e.reduce(((e,s,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[o+1]),t[0]);return new n(o,t,s)},S=(s,o)=>{if(e)s.adoptedStyleSheets=o.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const e of o){const o=document.createElement(\"style\"),n=t.litNonce;void 0!==n&&o.setAttribute(\"nonce\",n),o.textContent=e.cssText,s.appendChild(o)}},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{n as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as s}from\"./css-tag.js\";export{CSSResult,css,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{is:i,defineProperty:e,getOwnPropertyDescriptor:h,getOwnPropertyNames:r,getOwnPropertySymbols:o,getPrototypeOf:n}=Object,a=globalThis,c=a.trustedTypes,l=c?c.emptyScript:\"\",p=a.reactiveElementPolyfillSupport,d=(t,s)=>t,u={toAttribute(t,s){switch(s){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t)}catch(t){i=null}}return i}},f=(t,s)=>!i(t,s),b={attribute:!0,type:String,converter:u,reflect:!1,useDefault:!1,hasChanged:f};Symbol.metadata??=Symbol(\"metadata\"),a.litPropertyMetadata??=new WeakMap;class y extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,s=b){if(s.state&&(s.attribute=!1),this._$Ei(),this.prototype.hasOwnProperty(t)&&((s=Object.create(s)).wrapped=!0),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),h=this.getPropertyDescriptor(t,i,s);void 0!==h&&e(this.prototype,t,h)}}static getPropertyDescriptor(t,s,i){const{get:e,set:r}=h(this.prototype,t)??{get(){return this[s]},set(t){this[s]=t}};return{get:e,set(s){const h=e?.call(this);r?.call(this,s),this.requestUpdate(t,h,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??b}static _$Ei(){if(this.hasOwnProperty(d(\"elementProperties\")))return;const t=n(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(d(\"finalized\")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(d(\"properties\"))){const t=this.properties,s=[...r(t),...o(t)];for(const i of s)this.createProperty(i,t[i])}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(t(s))}else void 0!==s&&i.push(t(s));return i}static _$Eu(t,s){const i=s.attribute;return!1===i?void 0:\"string\"==typeof i?i:\"string\"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$EO??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$EO?.delete(t)}_$E_(){const t=new Map,s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return s(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$EO?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,s,i){this._$AK(t,i)}_$ET(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&!0===i.reflect){const h=(void 0!==i.converter?.toAttribute?i.converter:u).toAttribute(s,i.type);this._$Em=t,null==h?this.removeAttribute(e):this.setAttribute(e,h),this._$Em=null}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){const t=i.getPropertyOptions(e),h=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:u;this._$Em=e,this[e]=h.fromAttribute(s,t.type)??this._$Ej?.get(e)??null,this._$Em=null}}requestUpdate(t,s,i){if(void 0!==t){const e=this.constructor,h=this[t];if(i??=e.getPropertyOptions(t),!((i.hasChanged??f)(h,s)||i.useDefault&&i.reflect&&h===this._$Ej?.get(t)&&!this.hasAttribute(e._$Eu(t,i))))return;this.C(t,s,i)}!1===this.isUpdatePending&&(this._$ES=this._$EP())}C(t,s,{useDefault:i,reflect:e,wrapped:h},r){i&&!(this._$Ej??=new Map).has(t)&&(this._$Ej.set(t,r??s??this[t]),!0!==h||void 0!==r)||(this._$AL.has(t)||(this.hasUpdated||i||(s=void 0),this._$AL.set(t,s)),!0===e&&this._$Em!==t&&(this._$Eq??=new Set).add(t))}async _$EP(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t){const{wrapped:t}=i,e=this[s];!0!==t||this._$AL.has(s)||void 0===e||this.C(s,void 0,i,e)}}let t=!1;const s=this._$AL;try{t=this.shouldUpdate(s),t?(this.willUpdate(s),this._$EO?.forEach((t=>t.hostUpdate?.())),this.update(s)):this._$EM()}catch(s){throw t=!1,this._$EM(),s}t&&this._$AE(s)}willUpdate(t){}_$AE(t){this._$EO?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EM(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(t){return!0}update(t){this._$Eq&&=this._$Eq.forEach((t=>this._$ET(t,this[t]))),this._$EM()}updated(t){}firstUpdated(t){}}y.elementStyles=[],y.shadowRootOptions={mode:\"open\"},y[d(\"elementProperties\")]=new Map,y[d(\"finalized\")]=new Map,p?.({ReactiveElement:y}),(a.reactiveElementVersions??=[]).push(\"2.1.0\");export{y as ReactiveElement,s as adoptStyles,u as defaultConverter,t as getCompatibleStyle,f as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,i=t.trustedTypes,s=i?i.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,e=\"$lit$\",h=`lit$${Math.random().toFixed(9).slice(2)}$`,o=\"?\"+h,n=`<${o}>`,r=document,l=()=>r.createComment(\"\"),c=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,a=Array.isArray,u=t=>a(t)||\"function\"==typeof t?.[Symbol.iterator],d=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,v=/-->/g,_=/>/g,m=RegExp(`>|${d}(?:([^\\\\s\"'>=/]+)(${d}*=${d}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),p=/'/g,g=/\"/g,$=/^(?:script|style|textarea|title)$/i,y=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=y(1),b=y(2),w=y(3),T=Symbol.for(\"lit-noChange\"),E=Symbol.for(\"lit-nothing\"),A=new WeakMap,C=r.createTreeWalker(r,129);function P(t,i){if(!a(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==s?s.createHTML(i):i}const V=(t,i)=>{const s=t.length-1,o=[];let r,l=2===i?\"<svg>\":3===i?\"<math>\":\"\",c=f;for(let i=0;i<s;i++){const s=t[i];let a,u,d=-1,y=0;for(;y<s.length&&(c.lastIndex=y,u=c.exec(s),null!==u);)y=c.lastIndex,c===f?\"!--\"===u[1]?c=v:void 0!==u[1]?c=_:void 0!==u[2]?($.test(u[2])&&(r=RegExp(\"</\"+u[2],\"g\")),c=m):void 0!==u[3]&&(c=m):c===m?\">\"===u[0]?(c=r??f,d=-1):void 0===u[1]?d=-2:(d=c.lastIndex-u[2].length,a=u[1],c=void 0===u[3]?m:'\"'===u[3]?g:p):c===g||c===p?c=m:c===v||c===_?c=f:(c=m,r=void 0);const x=c===m&&t[i+1].startsWith(\"/>\")?\" \":\"\";l+=c===f?s+n:d>=0?(o.push(a),s.slice(0,d)+e+s.slice(d)+h+x):s+h+(-2===d?i:x)}return[P(t,l+(t[s]||\"<?>\")+(2===i?\"</svg>\":3===i?\"</math>\":\"\")),o]};class N{constructor({strings:t,_$litType$:s},n){let r;this.parts=[];let c=0,a=0;const u=t.length-1,d=this.parts,[f,v]=V(t,s);if(this.el=N.createElement(f,n),C.currentNode=this.el.content,2===s||3===s){const t=this.el.content.firstChild;t.replaceWith(...t.childNodes)}for(;null!==(r=C.nextNode())&&d.length<u;){if(1===r.nodeType){if(r.hasAttributes())for(const t of r.getAttributeNames())if(t.endsWith(e)){const i=v[a++],s=r.getAttribute(t).split(h),e=/([.?@])?(.*)/.exec(i);d.push({type:1,index:c,name:e[2],strings:s,ctor:\".\"===e[1]?H:\"?\"===e[1]?I:\"@\"===e[1]?L:k}),r.removeAttribute(t)}else t.startsWith(h)&&(d.push({type:6,index:c}),r.removeAttribute(t));if($.test(r.tagName)){const t=r.textContent.split(h),s=t.length-1;if(s>0){r.textContent=i?i.emptyScript:\"\";for(let i=0;i<s;i++)r.append(t[i],l()),C.nextNode(),d.push({type:2,index:++c});r.append(t[s],l())}}}else if(8===r.nodeType)if(r.data===o)d.push({type:2,index:c});else{let t=-1;for(;-1!==(t=r.data.indexOf(h,t+1));)d.push({type:7,index:c}),t+=h.length-1}c++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function S(t,i,s=t,e){if(i===T)return i;let h=void 0!==e?s._$Co?.[e]:s._$Cl;const o=c(i)?void 0:i._$litDirective$;return h?.constructor!==o&&(h?._$AO?.(!1),void 0===o?h=void 0:(h=new o(t),h._$AT(t,s,e)),void 0!==e?(s._$Co??=[])[e]=h:s._$Cl=h),void 0!==h&&(i=S(t,h._$AS(t,i.values),h,e)),i}class M{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:i},parts:s}=this._$AD,e=(t?.creationScope??r).importNode(i,!0);C.currentNode=e;let h=C.nextNode(),o=0,n=0,l=s[0];for(;void 0!==l;){if(o===l.index){let i;2===l.type?i=new R(h,h.nextSibling,this,t):1===l.type?i=new l.ctor(h,l.name,l.strings,this,t):6===l.type&&(i=new z(h,this,t)),this._$AV.push(i),l=s[++n]}o!==l?.index&&(h=C.nextNode(),o++)}return C.currentNode=r,e}p(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class R{get _$AU(){return this._$AM?._$AU??this._$Cv}constructor(t,i,s,e){this.type=2,this._$AH=E,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cv=e?.isConnected??!0}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t?.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=S(this,t,i),c(t)?t===E||null==t||\"\"===t?(this._$AH!==E&&this._$AR(),this._$AH=E):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.$(t):void 0!==t.nodeType?this.T(t):u(t)?this.k(t):this._(t)}O(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.O(t))}_(t){this._$AH!==E&&c(this._$AH)?this._$AA.nextSibling.data=t:this.T(r.createTextNode(t)),this._$AH=t}$(t){const{values:i,_$litType$:s}=t,e=\"number\"==typeof s?this._$AC(t):(void 0===s.el&&(s.el=N.createElement(P(s.h,s.h[0]),this.options)),s);if(this._$AH?._$AD===e)this._$AH.p(i);else{const t=new M(e,this),s=t.u(this.options);t.p(i),this.T(s),this._$AH=t}}_$AC(t){let i=A.get(t.strings);return void 0===i&&A.set(t.strings,i=new N(t)),i}k(t){a(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const h of t)e===i.length?i.push(s=new R(this.O(l()),this.O(l()),this,this.options)):s=i[e],s._$AI(h),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){for(this._$AP?.(!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){void 0===this._$AM&&(this._$Cv=t,this._$AP?.(t))}}class k{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,i,s,e,h){this.type=1,this._$AH=E,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=h,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=E}_$AI(t,i=this,s,e){const h=this.strings;let o=!1;if(void 0===h)t=S(this,t,i,0),o=!c(t)||t!==this._$AH&&t!==T,o&&(this._$AH=t);else{const e=t;let n,r;for(t=h[0],n=0;n<h.length-1;n++)r=S(this,e[s+n],i,n),r===T&&(r=this._$AH[n]),o||=!c(r)||r!==this._$AH[n],r===E?t=E:t!==E&&(t+=(r??\"\")+h[n+1]),this._$AH[n]=r}o&&!e&&this.j(t)}j(t){t===E?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??\"\")}}class H extends k{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===E?void 0:t}}class I extends k{constructor(){super(...arguments),this.type=4}j(t){this.element.toggleAttribute(this.name,!!t&&t!==E)}}class L extends k{constructor(t,i,s,e,h){super(t,i,s,e,h),this.type=5}_$AI(t,i=this){if((t=S(this,t,i,0)??E)===T)return;const s=this._$AH,e=t===E&&s!==E||t.capture!==s.capture||t.once!==s.once||t.passive!==s.passive,h=t!==E&&(s===E||e);e&&this.element.removeEventListener(this.name,this,s),h&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){\"function\"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,t):this._$AH.handleEvent(t)}}class z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){S(this,t)}}const Z={M:e,P:h,A:o,C:1,L:V,R:M,D:u,V:S,I:R,H:k,N:I,U:L,B:H,F:z},j=t.litHtmlPolyfillSupport;j?.(N,R),(t.litHtmlVersions??=[]).push(\"3.3.0\");const B=(t,i,s)=>{const e=s?.renderBefore??i;let h=e._$litPart$;if(void 0===h){const t=s?.renderBefore??null;e._$litPart$=h=new R(i.insertBefore(l(),t),t,void 0,s??{})}return h._$AI(t),h};export{Z as _$LH,x as html,w as mathml,T as noChange,E as nothing,B as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","import{ReactiveElement as t}from\"@lit/reactive-element\";export*from\"@lit/reactive-element\";import{render as e,noChange as r}from\"lit-html\";export*from\"lit-html\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const s=globalThis;class i extends t{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){const t=super.createRenderRoot();return this.renderOptions.renderBefore??=t.firstChild,t}update(t){const r=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=e(r,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this._$Do?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this._$Do?.setConnected(!1)}render(){return r}}i._$litElement$=!0,i[\"finalized\"]=!0,s.litElementHydrateSupport?.({LitElement:i});const o=s.litElementPolyfillSupport;o?.({LitElement:i});const n={_$AK:(t,e,r)=>{t._$AK(e,r)},_$AL:t=>t._$AL};(s.litElementVersions??=[]).push(\"4.2.0\");export{i as LitElement,n as _$LE};\n//# sourceMappingURL=lit-element.js.map\n","/**\n * Styles for Emergency Alerts Card\n * Using Lit's css template tag for scoped styles\n */\n\nimport { css } from 'lit';\n\nexport const cardStyles = css`\n  .card {\n    padding: 16px;\n    background: var(--ha-card-background, white);\n    border-radius: var(--ha-card-border-radius, 8px);\n    box-shadow: var(--ha-card-box-shadow, 0 2px 4px rgba(0, 0, 0, 0.1));\n  }\n\n  .summary-header {\n    font-size: 1.2em;\n    font-weight: bold;\n    margin-bottom: 16px;\n    text-align: center;\n    color: var(--primary-text-color);\n  }\n\n  .alert-item {\n    display: flex;\n    align-items: center;\n    padding: 12px;\n    margin: 6px 0;\n    border-radius: 8px;\n    background: var(--secondary-background-color, #f5f5f5);\n    transition: all 0.2s ease;\n    border-left: 4px solid transparent;\n  }\n\n  .alert-item:hover {\n    background: var(--secondary-background-color-hover, #e8e8e8);\n  }\n\n  .alert-critical {\n    border-left-color: #f44336;\n  }\n\n  .alert-warning {\n    border-left-color: #ff9800;\n  }\n\n  .alert-info {\n    border-left-color: #2196f3;\n  }\n\n  /* v2.0 Alert state classes with animations */\n  .alert-acknowledged {\n    opacity: 0.7;\n    background: rgba(76, 175, 80, 0.1);\n    transition:\n      opacity 0.3s ease,\n      background 0.3s ease;\n  }\n\n  .alert-snoozed {\n    opacity: 0.6;\n    background: rgba(255, 152, 0, 0.1);\n    transition:\n      opacity 0.3s ease,\n      background 0.3s ease;\n  }\n\n  .alert-escalated {\n    border-left-color: #f44336;\n    background: rgba(244, 67, 54, 0.1);\n    animation: pulse 2s ease-in-out infinite;\n  }\n\n  .alert-resolved {\n    opacity: 0.5;\n    background: rgba(33, 150, 243, 0.1);\n    transition:\n      opacity 0.5s ease,\n      background 0.5s ease;\n  }\n\n  /* v2.0 State-based classes for additional styling */\n  .state-snoozed {\n    border-left-width: 6px;\n  }\n\n  .state-escalated {\n    border-left-width: 6px;\n  }\n\n  .state-resolved {\n    filter: grayscale(0.3);\n  }\n\n  .group-header {\n    font-weight: bold;\n    margin: 20px 0 12px 0;\n    padding: 8px 12px;\n    border-radius: 6px;\n    background: var(--primary-color, #1976d2);\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .group-header.alert-critical {\n    background: #f44336;\n  }\n\n  .group-header.alert-warning {\n    background: #ff9800;\n  }\n\n  .group-header.alert-info {\n    background: #2196f3;\n  }\n\n  .action-buttons {\n    display: flex;\n    gap: 8px;\n    margin-left: auto;\n    flex-wrap: wrap;\n    justify-content: flex-end;\n  }\n\n  /* Responsive design for narrow columns */\n  @media (max-width: 600px) {\n    .action-buttons {\n      flex-direction: column;\n      gap: 4px;\n      margin-left: 0;\n      margin-top: 8px;\n      width: 100%;\n    }\n\n    .action-btn {\n      width: 100%;\n      justify-content: center;\n    }\n\n    .alert-item {\n      flex-direction: column;\n      align-items: stretch;\n    }\n\n    .alert-content {\n      margin-right: 0;\n      margin-bottom: 8px;\n    }\n  }\n\n  /* For very narrow columns (mobile) */\n  @media (max-width: 400px) {\n    .action-buttons {\n      gap: 3px;\n    }\n\n    .action-btn {\n      padding: 5px 8px;\n      font-size: 0.75em;\n    }\n  }\n\n  .action-btn {\n    padding: 6px 12px;\n    border: none;\n    border-radius: 6px;\n    cursor: pointer;\n    font-size: 0.8em;\n    font-weight: 500;\n    transition: all 0.2s ease;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n  }\n\n  .action-btn:hover:not(:disabled) {\n    transform: translateY(-1px);\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  }\n\n  .action-btn:active:not(:disabled) {\n    transform: translateY(0);\n  }\n\n  .action-btn:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .action-btn.loading {\n    opacity: 0.6;\n    position: relative;\n  }\n\n  /* v2.0 Button styles - switch-based */\n  .acknowledge-btn {\n    background: var(--primary-color, #1976d2);\n    color: white;\n  }\n\n  .snooze-btn {\n    background: var(--warning-color, #ff9800);\n    color: white;\n  }\n\n  .resolve-btn {\n    background: var(--success-color, #4caf50);\n    color: white;\n  }\n\n  /* v2.0 Active button states */\n  .acknowledged-active {\n    background: var(--success-color, #4caf50) !important;\n    box-shadow: 0 0 0 2px var(--success-color, #4caf50);\n  }\n\n  .snoozed-active {\n    background: var(--warning-color, #ff9800) !important;\n    box-shadow: 0 0 0 2px var(--warning-color, #ff9800);\n    animation: pulse-subtle 2s ease-in-out infinite;\n  }\n\n  .resolved-active {\n    background: var(--info-color, #2196f3) !important;\n    box-shadow: 0 0 0 2px var(--info-color, #2196f3);\n    opacity: 0.8;\n  }\n\n  .alert-content {\n    flex: 1;\n    margin-right: 12px;\n  }\n\n  .alert-name {\n    font-weight: 500;\n    color: var(--primary-text-color);\n    margin-bottom: 4px;\n  }\n\n  .alert-meta {\n    font-size: 0.8em;\n    color: var(--secondary-text-color);\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  }\n\n  .alert-icon {\n    margin-right: 12px;\n    font-size: 1.2em;\n  }\n\n  .compact .alert-item {\n    padding: 8px;\n    margin: 3px 0;\n  }\n\n  .compact .action-btn {\n    padding: 4px 8px;\n    font-size: 0.7em;\n  }\n\n  /* Compact mode responsive adjustments */\n  @media (max-width: 600px) {\n    .compact .action-buttons {\n      gap: 3px;\n    }\n\n    .compact .action-btn {\n      padding: 3px 6px;\n      font-size: 0.65em;\n    }\n  }\n\n  .no-alerts {\n    text-align: center;\n    padding: 32px;\n    color: var(--secondary-text-color);\n    font-style: italic;\n  }\n\n  .error-notification {\n    background: var(--error-color, #f44336);\n    color: white;\n    padding: 12px;\n    margin: 8px 0;\n    border-radius: 6px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    animation: slideIn 0.3s ease;\n  }\n\n  @keyframes slideIn {\n    from {\n      transform: translateY(-10px);\n      opacity: 0;\n    }\n    to {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  }\n\n  .error-notification .error-icon {\n    font-size: 1.2em;\n  }\n\n  .error-notification .error-message {\n    flex: 1;\n  }\n\n  .error-notification .error-dismiss {\n    background: none;\n    border: none;\n    color: white;\n    cursor: pointer;\n    font-size: 1.2em;\n    padding: 4px;\n    opacity: 0.8;\n  }\n\n  .error-notification .error-dismiss:hover {\n    opacity: 1;\n  }\n\n  /* v2.0 Status Badge Styles */\n  .status-badge {\n    display: inline-block;\n    padding: 3px 8px;\n    border-radius: 12px;\n    font-size: 0.65em;\n    font-weight: bold;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    margin-right: 8px;\n    animation: fadeIn 0.3s ease;\n  }\n\n  .status-badge.active {\n    background: var(--error-color, #f44336);\n    color: white;\n  }\n\n  .status-badge.acknowledged {\n    background: var(--success-color, #4caf50);\n    color: white;\n  }\n\n  .status-badge.snoozed {\n    background: var(--warning-color, #ff9800);\n    color: white;\n  }\n\n  .status-badge.escalated {\n    background: var(--error-color, #f44336);\n    color: white;\n    animation: pulse-badge 1.5s ease-in-out infinite;\n  }\n\n  .status-badge.resolved {\n    background: var(--info-color, #2196f3);\n    color: white;\n  }\n\n  .status-badge.inactive {\n    background: var(--disabled-text-color, #bdbdbd);\n    color: white;\n  }\n\n  /* v2.0 Escalated Indicator */\n  .escalated-indicator {\n    font-size: 0.9em;\n    margin-left: 6px;\n    animation: wiggle 0.5s ease-in-out infinite;\n  }\n\n  /* v2.0 Animations */\n  @keyframes pulse {\n    0%,\n    100% {\n      opacity: 1;\n      transform: scale(1);\n    }\n    50% {\n      opacity: 0.8;\n      transform: scale(1.02);\n    }\n  }\n\n  @keyframes pulse-subtle {\n    0%,\n    100% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.9;\n    }\n  }\n\n  @keyframes pulse-badge {\n    0%,\n    100% {\n      box-shadow: 0 0 0 0 rgba(244, 67, 54, 0.7);\n    }\n    50% {\n      box-shadow: 0 0 0 4px rgba(244, 67, 54, 0);\n    }\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: scale(0.9);\n    }\n    to {\n      opacity: 1;\n      transform: scale(1);\n    }\n  }\n\n  @keyframes wiggle {\n    0%,\n    100% {\n      transform: rotate(0deg);\n    }\n    25% {\n      transform: rotate(-5deg);\n    }\n    75% {\n      transform: rotate(5deg);\n    }\n  }\n`;\n","/**\n * Alert service for Home Assistant integration (v2.0)\n * Handles switch toggles and service calls with proper error handling\n */\n\nimport { HomeAssistant, ErrorNotification } from '../types';\n\n/**\n * Callback function type for error notifications\n */\nexport type ErrorCallback = (error: ErrorNotification) => void;\n\n/**\n * Service for managing emergency alerts (v2.0 switch-based)\n */\nexport class AlertService {\n  private hass: HomeAssistant;\n  private onError?: ErrorCallback;\n\n  /**\n   * Creates a new AlertService instance\n   * @param hass Home Assistant instance\n   * @param onError Optional callback for error notifications\n   */\n  constructor(hass: HomeAssistant, onError?: ErrorCallback) {\n    this.hass = hass;\n    this.onError = onError;\n  }\n\n  /**\n   * Converts binary_sensor entity ID to switch entity ID\n   * Handles any binary_sensor entity, not just those with emergency_ prefix\n   * @param entity_id Binary sensor entity ID (e.g., binary_sensor.emergency_foo or binary_sensor.custom_alert)\n   * @param switchType Type of switch (acknowledged, snoozed, resolved)\n   * @returns Switch entity ID (e.g., switch.foo_acknowledged or switch.custom_alert_acknowledged)\n   */\n  private _convertToSwitchId(entity_id: string, switchType: string): string {\n    // Replace binary_sensor domain with switch domain\n    let switchId = entity_id.replace('binary_sensor.', 'switch.');\n\n    // Remove \"emergency_\" prefix if present (integration doesn't use it for switches)\n    switchId = switchId.replace('emergency_', '');\n\n    // Append switch type\n    return switchId + `_${switchType}`;\n  }\n\n  /**\n   * Handles errors by logging to console and notifying user\n   * @param action Human-readable action that failed (e.g., \"acknowledge alert\")\n   * @param entity_id Entity ID that the action was performed on\n   * @param error The error that occurred\n   */\n  private handleError(action: string, entity_id: string, error: Error): void {\n    const message = `Failed to ${action}`;\n\n    // Log to console for debugging\n    // eslint-disable-next-line no-console\n    console.error(`[Emergency Alerts Card] ${message}:`, error);\n    // eslint-disable-next-line no-console\n    console.error(`Entity: ${entity_id}`);\n\n    // Notify user via callback\n    if (this.onError) {\n      this.onError({\n        message,\n        entity_id,\n        error,\n      });\n    }\n  }\n\n  /**\n   * Acknowledges an alert (v2.0 - toggles switch)\n   * Toggles the acknowledged switch (mutual exclusivity enforced by backend)\n   * @param entity_id Binary sensor entity ID of the alert\n   * @returns Promise that resolves when switch toggle completes\n   */\n  async acknowledge(entity_id: string): Promise<void> {\n    try {\n      const switchId = this._convertToSwitchId(entity_id, 'acknowledged');\n      await this.hass.callService('switch', 'toggle', { entity_id: switchId });\n    } catch (error) {\n      this.handleError('acknowledge alert', entity_id, error as Error);\n      throw error; // Re-throw to allow caller to handle if needed\n    }\n  }\n\n  /**\n   * Snoozes an alert (v2.0 - turns on switch)\n   * Silences the alert for configured duration (default 5 minutes)\n   * Auto-expires after duration, mutual exclusivity enforced by backend\n   * @param entity_id Binary sensor entity ID of the alert\n   * @returns Promise that resolves when switch turns on\n   */\n  async snooze(entity_id: string): Promise<void> {\n    try {\n      const switchId = this._convertToSwitchId(entity_id, 'snoozed');\n      // Use turn_on (not toggle) since snooze auto-expires\n      await this.hass.callService('switch', 'turn_on', { entity_id: switchId });\n    } catch (error) {\n      this.handleError('snooze alert', entity_id, error as Error);\n      throw error;\n    }\n  }\n\n  /**\n   * Resolves an alert (v2.0 - toggles switch)\n   * Marks the problem as fixed, prevents re-trigger until condition clears\n   * @param entity_id Binary sensor entity ID of the alert\n   * @returns Promise that resolves when switch toggle completes\n   */\n  async resolve(entity_id: string): Promise<void> {\n    try {\n      const switchId = this._convertToSwitchId(entity_id, 'resolved');\n      await this.hass.callService('switch', 'toggle', { entity_id: switchId });\n    } catch (error) {\n      this.handleError('resolve alert', entity_id, error as Error);\n      throw error;\n    }\n  }\n\n  /**\n   * Updates the Home Assistant instance\n   * Call this when hass object changes\n   * @param hass New Home Assistant instance\n   */\n  updateHass(hass: HomeAssistant): void {\n    this.hass = hass;\n  }\n\n  /**\n   * Updates the error callback\n   * @param callback New error callback function\n   */\n  setErrorCallback(callback: ErrorCallback): void {\n    this.onError = callback;\n  }\n}\n","/**\n * Alert filtering utilities\n */\n\nimport { Alert, CardConfig } from '../types';\n\n/**\n * Determines if an alert should be displayed based on configuration filters (v2.0)\n * Applies severity, group, and status filters in sequence\n * @param alert The alert to check\n * @param config Card configuration with filter settings\n * @returns true if alert should be displayed, false otherwise\n */\nexport function shouldShowAlert(alert: Alert, config: CardConfig): boolean {\n  // Severity filter - only show configured severity levels\n  if (config.severity_filter && !config.severity_filter.includes(alert.severity)) {\n    return false;\n  }\n\n  // Group filter - only show alerts from specified groups (if filter is set)\n  if (\n    config.group_filter &&\n    config.group_filter.length > 0 &&\n    !config.group_filter.includes(alert.group)\n  ) {\n    return false;\n  }\n\n  // Status filter - only show alerts with specified statuses\n  if (config.status_filter && !config.status_filter.includes(alert.status)) {\n    return false;\n  }\n\n  // Individual status toggles - these override status_filter for specific states\n  if (!config.show_acknowledged && alert.acknowledged) return false;\n  if (!config.show_snoozed && alert.snoozed) return false; // NEW in v2.0\n  if (!config.show_resolved && alert.resolved) return false; // RENAMED from show_cleared\n  if (!config.show_escalated && alert.escalated) return false;\n\n  return true;\n}\n\n/**\n * Determines if an entity matches any of the configured patterns\n * Supports wildcard patterns (e.g., \"binary_sensor.emergency_*\")\n * @param entityId Entity ID to check\n * @param patterns Array of patterns (can include wildcards)\n * @param patternCache Optional cache for compiled regex patterns\n * @returns true if entity matches any pattern\n */\nexport function matchesEntityPattern(\n  entityId: string,\n  patterns: string[],\n  patternCache?: Map<string, RegExp>\n): boolean {\n  return patterns.some(pattern => {\n    if (pattern.includes('*')) {\n      // Use cached regex if available, otherwise compile and cache\n      let regex: RegExp;\n      if (patternCache && patternCache.has(pattern)) {\n        regex = patternCache.get(pattern)!;\n      } else {\n        regex = new RegExp(pattern.replace(/\\*/g, '.*'));\n        if (patternCache) {\n          patternCache.set(pattern, regex);\n        }\n      }\n      return regex.test(entityId);\n    }\n    return entityId === pattern;\n  });\n}\n","/**\n * Alert sorting utilities\n */\n\nimport { Alert, CardConfig } from '../types';\n\n/**\n * Severity order for sorting (critical > warning > info)\n */\nconst SEVERITY_ORDER: Record<string, number> = {\n  critical: 0,\n  warning: 1,\n  info: 2,\n};\n\n/**\n * Sorts alerts in-place based on configuration\n * Supports sorting by first_triggered (newest first), severity, name, or group\n * @param alerts Array of alerts to sort (modified in-place)\n * @param config Card configuration with sort settings\n */\nexport function sortAlerts(alerts: Alert[], config: CardConfig): void {\n  alerts.sort((a, b) => {\n    switch (config.sort_by) {\n      case 'first_triggered': {\n        // Sort by time, newest first\n        const aTime = a.first_triggered ? new Date(a.first_triggered).getTime() : 0;\n        const bTime = b.first_triggered ? new Date(b.first_triggered).getTime() : 0;\n        return bTime - aTime;\n      }\n      case 'severity': {\n        // Sort by severity (critical, warning, info)\n        // Note: Must check for undefined explicitly since critical=0 is falsy\n        const aOrder = SEVERITY_ORDER[a.severity] !== undefined ? SEVERITY_ORDER[a.severity] : 3;\n        const bOrder = SEVERITY_ORDER[b.severity] !== undefined ? SEVERITY_ORDER[b.severity] : 3;\n        return aOrder - bOrder;\n      }\n      case 'name':\n        // Alphabetical by name\n        return a.name.localeCompare(b.name);\n      case 'group':\n        // Alphabetical by group\n        return a.group.localeCompare(b.group);\n      default:\n        return 0;\n    }\n  });\n}\n","/**\n * Alert grouping utilities\n */\n\nimport { Alert, GroupedAlerts, CardConfig } from '../types';\n\n/**\n * Severity levels in display order\n */\nconst SEVERITY_ORDER = ['critical', 'warning', 'info'];\n\n/**\n * Groups alerts by severity level (critical, warning, info)\n * Creates empty groups for all severity levels\n * @param alerts Array of alerts to group\n * @returns Grouped alerts by severity\n */\nexport function groupAlertsBySeverity(alerts: Alert[]): GroupedAlerts {\n  const grouped: GroupedAlerts = {};\n\n  // Initialize empty groups for all severity levels\n  SEVERITY_ORDER.forEach(severity => {\n    grouped[severity] = [];\n  });\n\n  // Group alerts by their severity\n  for (const alert of alerts) {\n    if (!grouped[alert.severity]) {\n      grouped[alert.severity] = [];\n    }\n    grouped[alert.severity].push(alert);\n  }\n\n  return grouped;\n}\n\n/**\n * Groups alerts by their group category (security, safety, etc.)\n * @param alerts Array of alerts to group\n * @returns Grouped alerts by category\n */\nexport function groupAlertsByGroup(alerts: Alert[]): GroupedAlerts {\n  const grouped: GroupedAlerts = {};\n\n  for (const alert of alerts) {\n    const group = alert.group || 'other';\n    if (!grouped[group]) {\n      grouped[group] = [];\n    }\n    grouped[group].push(alert);\n  }\n\n  return grouped;\n}\n\n/**\n * Groups alerts by their status (v2.0: active, acknowledged, snoozed, escalated, resolved)\n * Creates predefined groups for all status types\n * @param alerts Array of alerts to group\n * @returns Grouped alerts by status\n */\nexport function groupAlertsByStatus(alerts: Alert[]): GroupedAlerts {\n  const grouped: GroupedAlerts = {\n    active: [],\n    acknowledged: [],\n    snoozed: [], // NEW in v2.0\n    escalated: [],\n    resolved: [], // RENAMED from cleared\n  };\n\n  for (const alert of alerts) {\n    grouped[alert.status].push(alert);\n  }\n\n  return grouped;\n}\n\n/**\n * Groups all alerts into a single group\n * Used when group_by is 'none'\n * @param alerts Array of alerts\n * @returns All alerts in a single 'all' group\n */\nexport function groupAlertsNone(alerts: Alert[]): GroupedAlerts {\n  return { all: alerts };\n}\n\n/**\n * Groups alerts based on configuration strategy\n * Delegates to specific grouping functions based on config.group_by\n * @param alerts Array of alerts to group\n * @param config Card configuration with grouping settings\n * @returns Grouped alerts according to strategy\n */\nexport function groupAlerts(alerts: Alert[], config: CardConfig): GroupedAlerts {\n  switch (config.group_by) {\n    case 'group':\n      return groupAlertsByGroup(alerts);\n    case 'status':\n      return groupAlertsByStatus(alerts);\n    case 'none':\n      return groupAlertsNone(alerts);\n    case 'severity':\n    default:\n      return groupAlertsBySeverity(alerts);\n  }\n}\n\n/**\n * Gets the count of active alerts in a group\n * For status groups, returns total count; for others, counts only 'on' state alerts\n * @param alerts Array of alerts in the group\n * @param groupBy Grouping strategy being used\n * @returns Number of active/relevant alerts\n */\nexport function getGroupCount(alerts: Alert[], groupBy: string): number {\n  if (groupBy === 'status') {\n    // For status groups, show total count\n    return alerts.length;\n  }\n  // For other grouping, show only active alerts (state === 'on')\n  return alerts.filter(a => a.state === 'on').length;\n}\n","/**\n * Entity discovery and status utilities\n */\n\nimport {\n  HassEntity,\n  HassEntities,\n  Alert,\n  AlertStatus,\n  EmergencyAlertEntity,\n  Severity,\n  AlertGroup,\n} from '../types';\nimport { matchesEntityPattern } from './filters';\n\n/**\n * Determines the current status of an alert based on its attributes (v2.0)\n * Priority: resolved > escalated > snoozed > acknowledged > active > inactive\n * @param entity Emergency alert entity\n * @returns Current alert status\n */\nexport function getAlertStatus(entity: HassEntity): AlertStatus {\n  const attrs = entity.attributes;\n\n  if (attrs.resolved) return 'resolved';\n  if (attrs.escalated) return 'escalated';\n  if (attrs.snoozed) return 'snoozed';\n  if (attrs.acknowledged) return 'acknowledged';\n  if (entity.state === 'on') return 'active';\n  return 'inactive';\n}\n\n/**\n * Checks if an entity has emergency alert attributes\n * @param entity Entity to check\n * @returns true if entity has severity or group attributes\n */\nexport function hasEmergencyAttributes(entity: HassEntity): boolean {\n  return !!(entity.attributes && (entity.attributes.severity || entity.attributes.group));\n}\n\n/**\n * Converts a Home Assistant entity to an Alert object (v2.0)\n * @param entity Emergency alert entity from HA\n * @returns Normalized Alert object\n */\nexport function entityToAlert(entity: EmergencyAlertEntity): Alert {\n  const attrs = entity.attributes;\n\n  return {\n    entity_id: entity.entity_id,\n    name: attrs.friendly_name || entity.entity_id,\n    state: entity.state,\n    severity: (attrs.severity || 'info') as Severity,\n    group: (attrs.group || 'other') as AlertGroup,\n    acknowledged: !!attrs.acknowledged,\n    escalated: !!attrs.escalated,\n    snoozed: !!attrs.snoozed, // NEW in v2.0\n    resolved: !!attrs.resolved, // RENAMED from cleared\n    first_triggered: attrs.first_triggered,\n    last_cleared: attrs.last_cleared,\n    snooze_until: attrs.snooze_until, // NEW in v2.0\n    status: getAlertStatus(entity),\n  };\n}\n\n/**\n * Discovers all emergency alert entities from Home Assistant states\n * Filters entities based on configured patterns and presence of emergency attributes\n * @param hassStates All Home Assistant entity states\n * @param patterns Entity ID patterns to match (supports wildcards)\n * @param patternCache Optional cache for compiled regex patterns (for performance)\n * @returns Array of discovered alert entities\n */\nexport function discoverAlertEntities(\n  hassStates: HassEntities,\n  patterns: string[],\n  patternCache?: Map<string, RegExp>\n): EmergencyAlertEntity[] {\n  const alertEntities: EmergencyAlertEntity[] = [];\n\n  for (const entity of Object.values(hassStates)) {\n    // Check if entity matches configured patterns\n    const matchesPattern = matchesEntityPattern(entity.entity_id, patterns, patternCache);\n\n    // Also check if entity has emergency alert attributes (allows custom entity names)\n    const hasAttributes = hasEmergencyAttributes(entity);\n\n    if (matchesPattern || hasAttributes) {\n      alertEntities.push(entity as EmergencyAlertEntity);\n    }\n  }\n\n  return alertEntities;\n}\n\n/**\n * Creates a hash of relevant entity IDs and their last_updated timestamps\n * Used to detect if any emergency alerts have changed\n * @param entities Emergency alert entities\n * @returns Hash string representing current state\n */\nexport function createEntityStateHash(entities: EmergencyAlertEntity[]): string {\n  return entities\n    .map(e => `${e.entity_id}:${e.last_updated}`)\n    .sort()\n    .join('|');\n}\n","/**\n * Emergency Alerts Card for Home Assistant\n * Displays and manages emergency alerts from the Emergency Alerts integration\n *\n * @module emergency-alerts-card\n */\n\nimport { LitElement, html, css, PropertyValues, TemplateResult } from 'lit';\nimport {\n  HomeAssistant,\n  HassEntity,\n  CardConfig,\n  Alert,\n  GroupedAlerts,\n  ErrorNotification,\n  LoadingState,\n  EmergencyAlertEntity,\n} from './types';\nimport { cardStyles } from './styles';\nimport { AlertService } from './services/alert-service';\nimport {\n  formatTimeAgo,\n  getSeverityIcon,\n  getSeverityColor,\n  getGroupTitle,\n} from './utils/formatters';\nimport { shouldShowAlert } from './utils/filters';\nimport { sortAlerts } from './utils/sorters';\nimport { groupAlerts, getGroupCount } from './utils/groupers';\nimport {\n  discoverAlertEntities,\n  entityToAlert,\n  createEntityStateHash,\n} from './utils/entity-discovery';\n\n/**\n * Custom Lovelace card for displaying emergency alerts\n * Integrates with the Emergency Alerts Home Assistant integration\n *\n * @element emergency-alerts-card\n */\nexport class EmergencyAlertsCard extends LitElement {\n  /** Home Assistant instance passed by the frontend */\n  hass?: HomeAssistant;\n\n  /** Card configuration from Lovelace YAML */\n  config?: CardConfig;\n\n  /** Discovered and filtered alert entities */\n  public alerts: Alert[] = [];\n\n  /** Alerts grouped by configured strategy */\n  public grouped: GroupedAlerts = {};\n\n  /** Service for calling Home Assistant alert actions */\n  private alertService?: AlertService;\n\n  /** Set of entity IDs currently being acted upon (for loading states) */\n  private loadingActions: LoadingState = new Set();\n\n  /** Cache for compiled regex patterns (performance optimization) */\n  private patternCache: Map<string, RegExp> = new Map();\n\n  /** Hash of last seen entity states (for change detection) */\n  private lastStatesHash: string = '';\n\n  /** Current error notification to display */\n  private currentError?: ErrorNotification;\n\n  /** Interval ID for auto-refresh */\n  private refreshInterval?: number;\n\n  static get properties() {\n    return {\n      hass: { attribute: false },\n      config: { attribute: false },\n      alerts: { type: Array, state: true },\n      grouped: { type: Object, state: true },\n      loadingActions: { type: Object, state: true },\n      currentError: { type: Object, state: true },\n    };\n  }\n\n  static styles = cardStyles;\n\n  /**\n   * Sets the card configuration\n   * Called by Home Assistant when card is initialized or config changes\n   * @param config Card configuration from Lovelace YAML\n   */\n  setConfig(config: CardConfig): void {\n    if (!config) {\n      throw new Error('Invalid configuration');\n    }\n\n    // Merge user config with defaults (v2.0)\n    // Note: type field is always provided by Home Assistant, no default needed\n    this.config = {\n      show_acknowledged: true,\n      show_snoozed: true, // NEW in v2.0\n      show_resolved: false, // RENAMED from show_cleared\n      show_escalated: true,\n      group_by: 'severity',\n      sort_by: 'first_triggered',\n      severity_filter: ['critical', 'warning', 'info'],\n      group_filter: [],\n      status_filter: ['active', 'acknowledged', 'snoozed', 'escalated'], // Updated for v2.0\n      compact_mode: false,\n      show_timestamps: true,\n      show_group_labels: true,\n      show_severity_icons: true,\n      show_status_badge: true, // NEW in v2.0\n      max_alerts_per_group: 50,\n      show_acknowledge_button: true,\n      show_snooze_button: true, // NEW in v2.0\n      show_resolve_button: true, // RENAMED from show_clear_button\n      button_style: 'compact',\n      entity_patterns: ['binary_sensor.emergency_*'],\n      refresh_interval: 30,\n      ...config,\n    };\n\n    // Start auto-refresh if configured\n    this._startAutoRefresh();\n  }\n\n  /**\n   * Lifecycle: called when properties change\n   * Implements performance optimization by checking if relevant entities changed\n   * @param changedProps Map of changed properties\n   */\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    if (changedProps.has('hass') && this.hass) {\n      // Initialize alert service on first hass update\n      if (!this.alertService) {\n        this.alertService = new AlertService(this.hass, this._handleError.bind(this));\n      } else {\n        this.alertService.updateHass(this.hass);\n      }\n\n      // Only update alerts if relevant entities changed\n      if (this._hasRelevantChanges()) {\n        this._updateAlerts();\n      }\n    }\n  }\n\n  /**\n   * Performance optimization: checks if any emergency alert entities changed\n   * Compares hash of entity IDs and last_updated timestamps\n   * @returns true if emergency alerts have changed\n   */\n  private _hasRelevantChanges(): boolean {\n    if (!this.hass || !this.config) return false;\n\n    const patterns = this.config.entity_patterns || ['binary_sensor.emergency_*'];\n    const alertEntities = discoverAlertEntities(this.hass.states, patterns, this.patternCache);\n\n    const currentHash = createEntityStateHash(alertEntities);\n    const hasChanges = currentHash !== this.lastStatesHash;\n\n    if (hasChanges) {\n      this.lastStatesHash = currentHash;\n    }\n\n    return hasChanges;\n  }\n\n  /**\n   * Discovers and processes all emergency alert entities\n   * Applies filtering, sorting, and grouping based on configuration\n   */\n  private _updateAlerts(): void {\n    if (!this.hass || !this.config) return;\n\n    const patterns = this.config.entity_patterns || ['binary_sensor.emergency_*'];\n\n    // Discover alert entities from Home Assistant\n    const alertEntities: EmergencyAlertEntity[] = discoverAlertEntities(\n      this.hass.states,\n      patterns,\n      this.patternCache\n    );\n\n    // Convert to normalized Alert objects\n    const allAlerts: Alert[] = alertEntities.map(entityToAlert);\n\n    // Filter alerts based on configuration\n    const filteredAlerts = allAlerts.filter(alert => shouldShowAlert(alert, this.config!));\n\n    // Sort alerts\n    sortAlerts(filteredAlerts, this.config);\n\n    // Group alerts\n    this.alerts = filteredAlerts;\n    this.grouped = groupAlerts(filteredAlerts, this.config);\n  }\n\n  /**\n   * Starts auto-refresh timer if configured\n   */\n  private _startAutoRefresh(): void {\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval);\n    }\n\n    if (this.config?.refresh_interval && this.config.refresh_interval > 0) {\n      this.refreshInterval = window.setInterval(() => {\n        this._updateAlerts();\n      }, this.config.refresh_interval * 1000);\n    }\n  }\n\n  /**\n   * Lifecycle: cleanup when element is removed\n   */\n  public disconnectedCallback(): void {\n    super.disconnectedCallback();\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval);\n    }\n  }\n\n  /**\n   * Handles errors from alert service\n   * Displays error notification to user\n   * @param error Error notification object\n   */\n  private _handleError(error: ErrorNotification): void {\n    this.currentError = error;\n    this.requestUpdate();\n\n    // Auto-dismiss error after 5 seconds\n    setTimeout(() => {\n      if (this.currentError === error) {\n        this.currentError = undefined;\n        this.requestUpdate();\n      }\n    }, 5000);\n  }\n\n  /**\n   * Dismisses the current error notification\n   */\n  private _dismissError(): void {\n    this.currentError = undefined;\n  }\n\n  /**\n   * Handles acknowledge action with loading state\n   * @param entity_id Entity ID to acknowledge\n   */\n  private async _handleAcknowledge(entity_id: string): Promise<void> {\n    if (!this.alertService) return;\n\n    this.loadingActions.add(entity_id);\n    this.requestUpdate();\n\n    try {\n      await this.alertService.acknowledge(entity_id);\n    } finally {\n      this.loadingActions.delete(entity_id);\n      this.requestUpdate();\n    }\n  }\n\n  /**\n   * Handles resolve action with loading state (v2.0 - renamed from clear)\n   * @param entity_id Entity ID to resolve\n   */\n  private async _handleResolve(entity_id: string): Promise<void> {\n    if (!this.alertService) return;\n\n    this.loadingActions.add(entity_id);\n    this.requestUpdate();\n\n    try {\n      await this.alertService.resolve(entity_id);\n    } finally {\n      this.loadingActions.delete(entity_id);\n      this.requestUpdate();\n    }\n  }\n\n  /**\n   * Handles snooze action with loading state (v2.0 - NEW)\n   * Silences alert for configured duration (default 5 minutes)\n   * @param entity_id Entity ID to snooze\n   */\n  private async _handleSnooze(entity_id: string): Promise<void> {\n    if (!this.alertService) return;\n\n    this.loadingActions.add(entity_id);\n    this.requestUpdate();\n\n    try {\n      await this.alertService.snooze(entity_id);\n    } finally {\n      this.loadingActions.delete(entity_id);\n      this.requestUpdate();\n    }\n  }\n\n  /**\n   * Determines if action buttons should be shown for an alert (v2.0)\n   * @param _alert Alert to check (unused - actions always shown for toggleable switches)\n   * @returns true if actions should be displayed\n   */\n  private _shouldShowActions(_alert: Alert): boolean {\n    // Show actions for all alert states (switches are toggleable)\n    return true;\n  }\n\n  /**\n   * Formats snooze_until timestamp (v2.0 helper)\n   * @param snooze_until ISO timestamp when snooze expires\n   * @returns Formatted string like \"until 2:30 PM\"\n   */\n  private _formatSnoozeTime(snooze_until?: string): string {\n    if (!snooze_until) return '';\n\n    const snoozeDate = new Date(snooze_until);\n    const timeStr = snoozeDate.toLocaleTimeString([], {\n      hour: 'numeric',\n      minute: '2-digit',\n    });\n\n    return `until ${timeStr}`;\n  }\n\n  /**\n   * Renders status badge showing current alert state (v2.0)\n   * @param alert Alert to render badge for\n   * @returns Lit template\n   */\n  private _renderStatusBadge(alert: Alert): TemplateResult | string {\n    if (!this.config?.show_status_badge) {\n      return '';\n    }\n\n    return html`\n      <span class=\"status-badge ${alert.status}\"> ${alert.status.toUpperCase()} </span>\n    `;\n  }\n\n  /**\n   * Renders the card UI\n   * @returns Lit template\n   */\n  render(): TemplateResult {\n    if (!this.hass) {\n      return html`<div class=\"card\">Loading...</div>`;\n    }\n\n    const totalActive = this.alerts.filter(a => a.state === 'on').length;\n    const cardClass = this.config?.compact_mode ? 'compact' : '';\n\n    return html`\n      <div class=\"card ${cardClass}\">\n        <div class=\"summary-header\">Emergency Alerts (${totalActive} active)</div>\n\n        ${this._renderErrorNotification()} ${this._renderAlerts()}\n      </div>\n    `;\n  }\n\n  /**\n   * Renders error notification if present\n   * @returns Lit template\n   */\n  private _renderErrorNotification(): TemplateResult | string {\n    if (!this.currentError) return '';\n\n    return html`\n      <div class=\"error-notification\">\n        <span class=\"error-icon\">⚠️</span>\n        <span class=\"error-message\">${this.currentError.message}</span>\n        <button class=\"error-dismiss\" @click=${this._dismissError}>×</button>\n      </div>\n    `;\n  }\n\n  /**\n   * Renders all alert groups\n   * @returns Lit template\n   */\n  private _renderAlerts(): TemplateResult | string {\n    if (this.alerts.length === 0) {\n      return html`<div class=\"no-alerts\">No alerts to display</div>`;\n    }\n\n    return html`\n      ${Object.entries(this.grouped).map(([group, alerts]) =>\n        this._renderAlertGroup(group, alerts)\n      )}\n    `;\n  }\n\n  /**\n   * Renders a single alert group\n   * @param group Group name\n   * @param alerts Alerts in the group\n   * @returns Lit template\n   */\n  private _renderAlertGroup(group: string, alerts: Alert[]): TemplateResult | string {\n    if (alerts.length === 0) return '';\n\n    const groupCount = getGroupCount(alerts, this.config!.group_by || 'severity');\n    const groupTitle = getGroupTitle(group, this.config!.group_by || 'severity');\n    const severityClass = this.config?.group_by === 'severity' ? `alert-${group}` : '';\n\n    const maxAlerts = this.config?.max_alerts_per_group || 50;\n    const displayAlerts = alerts.slice(0, maxAlerts);\n\n    return html`\n      <div class=\"group-header ${severityClass}\">\n        <span>${groupTitle} (${groupCount})</span>\n      </div>\n      ${displayAlerts.map(alert => this._renderAlert(alert))}\n    `;\n  }\n\n  /**\n   * Renders a single alert item\n   * @param alert Alert to render\n   * @returns Lit template\n   */\n  private _renderAlert(alert: Alert): TemplateResult {\n    const classes = [\n      'alert-item',\n      `alert-${alert.severity}`,\n      `state-${alert.status}`, // NEW: state-based class for animations\n      alert.acknowledged ? 'alert-acknowledged' : '',\n      alert.snoozed ? 'alert-snoozed' : '', // NEW in v2.0\n      alert.escalated ? 'alert-escalated' : '',\n      alert.resolved ? 'alert-resolved' : '', // RENAMED from alert-cleared\n    ]\n      .filter(Boolean)\n      .join(' ');\n\n    return html`\n      <div class=${classes}>\n        ${this._renderAlertIcon(alert)} ${this._renderStatusBadge(alert)}\n        ${this._renderAlertContent(alert)}\n        ${this._shouldShowActions(alert) ? this._renderAlertActions(alert) : ''}\n      </div>\n    `;\n  }\n\n  /**\n   * Renders alert severity icon\n   * @param alert Alert to render icon for\n   * @returns Lit template\n   */\n  private _renderAlertIcon(alert: Alert): TemplateResult | string {\n    if (!this.config?.show_severity_icons) return '';\n\n    return html`\n      <ha-icon\n        class=\"alert-icon\"\n        icon=\"${getSeverityIcon(alert.severity)}\"\n        style=\"color: ${getSeverityColor(alert.severity)};\"\n      ></ha-icon>\n    `;\n  }\n\n  /**\n   * Renders alert content (name and metadata)\n   * @param alert Alert to render content for\n   * @returns Lit template\n   */\n  private _renderAlertContent(alert: Alert): TemplateResult {\n    return html`\n      <div class=\"alert-content\">\n        <div class=\"alert-name\">\n          ${alert.name} ${alert.escalated ? html`<span class=\"escalated-indicator\">⚠️</span>` : ''}\n        </div>\n        <div class=\"alert-meta\">\n          ${this.config?.show_group_labels ? html`<span>${alert.group}</span>` : ''}\n          ${this.config?.show_timestamps && alert.first_triggered\n            ? html`<span>• ${formatTimeAgo(alert.first_triggered)}</span>`\n            : ''}\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Renders action buttons for an alert\n   * @param alert Alert to render actions for\n   * @returns Lit template\n   */\n  private _renderAlertActions(alert: Alert): TemplateResult {\n    const isLoading = this.loadingActions.has(alert.entity_id);\n\n    return html`\n      <div class=\"action-buttons\">\n        ${this._renderAcknowledgeButton(alert, isLoading)}\n        ${this._renderSnoozeButton(alert, isLoading)} ${this._renderResolveButton(alert, isLoading)}\n      </div>\n    `;\n  }\n\n  /**\n   * Renders acknowledge button if appropriate\n   * @param alert Alert to render button for\n   * @param isLoading Whether action is in progress\n   * @returns Lit template\n   */\n  private _renderAcknowledgeButton(alert: Alert, isLoading: boolean): TemplateResult | string {\n    if (!this.config?.show_acknowledge_button) {\n      return '';\n    }\n\n    const isActive = alert.acknowledged;\n    const label = isActive\n      ? this.config?.button_style === 'icons_only'\n        ? '✓'\n        : '✓ Acknowledged'\n      : this.config?.button_style === 'icons_only'\n        ? '○'\n        : 'Acknowledge';\n\n    return html`\n      <button\n        class=\"action-btn acknowledge-btn ${isLoading ? 'loading' : ''} ${isActive\n          ? 'acknowledged-active'\n          : ''}\"\n        ?disabled=${isLoading}\n        @click=${() => this._handleAcknowledge(alert.entity_id)}\n        title=\"Mark as working on it (prevents auto-escalation). Turning this ON will turn other switches OFF.\"\n      >\n        ${isLoading ? '⏳' : label}\n      </button>\n    `;\n  }\n\n  /**\n   * Renders snooze button (v2.0 - NEW)\n   * Shows active state when snoozed with static timestamp\n   * @param alert Alert to render button for\n   * @param isLoading Whether action is in progress\n   * @returns Lit template\n   */\n  private _renderSnoozeButton(alert: Alert, isLoading: boolean): TemplateResult | string {\n    if (!this.config?.show_snooze_button) {\n      return '';\n    }\n\n    const isActive = alert.snoozed;\n    const label = isActive\n      ? this.config?.button_style === 'icons_only'\n        ? '🔕'\n        : `🔕 Snoozed ${this._formatSnoozeTime(alert.snooze_until)}`\n      : this.config?.button_style === 'icons_only'\n        ? '💤'\n        : 'Snooze (5m)';\n\n    return html`\n      <button\n        class=\"action-btn snooze-btn ${isLoading ? 'loading' : ''} ${isActive\n          ? 'snoozed-active'\n          : ''}\"\n        ?disabled=${isLoading}\n        @click=${() => this._handleSnooze(alert.entity_id)}\n        title=\"Silence for 5 minutes (auto-expires). Turning this ON will turn other switches OFF.\"\n      >\n        ${isLoading ? '⏳' : label}\n      </button>\n    `;\n  }\n\n  /**\n   * Renders resolve button (v2.0 - renamed from clear)\n   * Shows active state when resolved\n   * @param alert Alert to render button for\n   * @param isLoading Whether action is in progress\n   * @returns Lit template\n   */\n  private _renderResolveButton(alert: Alert, isLoading: boolean): TemplateResult | string {\n    if (!this.config?.show_resolve_button) {\n      return '';\n    }\n\n    const isActive = alert.resolved;\n    const label = isActive\n      ? this.config?.button_style === 'icons_only'\n        ? '✓'\n        : '✓ Resolved'\n      : this.config?.button_style === 'icons_only'\n        ? '×'\n        : 'Resolve';\n\n    return html`\n      <button\n        class=\"action-btn resolve-btn ${isLoading ? 'loading' : ''} ${isActive\n          ? 'resolved-active'\n          : ''}\"\n        ?disabled=${isLoading}\n        @click=${() => this._handleResolve(alert.entity_id)}\n        title=\"Mark as fixed (won't re-trigger until condition clears). Turning this ON will turn other switches OFF.\"\n      >\n        ${isLoading ? '⏳' : label}\n      </button>\n    `;\n  }\n\n  /**\n   * Returns stub configuration for card picker\n   * @returns Default configuration\n   */\n  static getStubConfig(): CardConfig {\n    return {\n      type: 'custom:emergency-alerts-card',\n      summary_entity: '',\n      show_acknowledged: true,\n      show_snoozed: true, // NEW in v2.0\n      show_resolved: false, // RENAMED from show_cleared\n      show_escalated: true,\n      group_by: 'severity',\n      sort_by: 'first_triggered',\n      severity_filter: ['critical', 'warning', 'info'],\n      group_filter: [],\n      status_filter: ['active', 'acknowledged', 'snoozed', 'escalated'], // Updated for v2.0\n      compact_mode: false,\n      show_timestamps: true,\n      show_group_labels: true,\n      show_severity_icons: true,\n      show_status_badge: true, // NEW in v2.0\n      max_alerts_per_group: 10,\n      show_acknowledge_button: true,\n      show_snooze_button: true, // NEW in v2.0\n      show_resolve_button: true, // RENAMED from show_clear_button\n      button_style: 'compact',\n      entity_patterns: ['binary_sensor.emergency_*'],\n      refresh_interval: 30,\n    };\n  }\n\n  /**\n   * Returns card editor element\n   * @returns Editor element\n   */\n  static getConfigElement() {\n    return document.createElement('emergency-alerts-card-editor');\n  }\n}\n\n/**\n * Card editor for Home Assistant Lovelace UI\n * Provides visual configuration interface for the Emergency Alerts Card\n * Note: This editor will be refactored in a future update to use the modular architecture\n */\nexport class EmergencyAlertsCardEditor extends LitElement {\n  hass?: HomeAssistant;\n  config?: CardConfig;\n\n  static get properties() {\n    return {\n      hass: { attribute: false },\n      config: { attribute: false },\n    };\n  }\n\n  static styles = css`\n    .editor {\n      padding: 16px;\n      background: var(--ha-card-background, white);\n      border-radius: var(--ha-card-border-radius, 8px);\n    }\n\n    .section {\n      margin-bottom: 24px;\n      padding: 16px;\n      border: 1px solid var(--divider-color, #e0e0e0);\n      border-radius: 8px;\n    }\n\n    .section-header {\n      font-size: 1.1em;\n      font-weight: bold;\n      margin-bottom: 12px;\n      color: var(--primary-text-color);\n      border-bottom: 1px solid var(--divider-color, #e0e0e0);\n      padding-bottom: 8px;\n    }\n\n    .field {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      margin: 12px 0;\n      min-height: 40px;\n    }\n\n    .field label {\n      flex: 1;\n      margin-right: 16px;\n      font-weight: 500;\n      color: var(--primary-text-color);\n    }\n\n    .field-input {\n      flex: 1;\n      max-width: 300px;\n    }\n\n    ha-textfield,\n    ha-select {\n      width: 100%;\n    }\n\n    ha-switch {\n      margin-left: auto;\n    }\n\n    .multi-select-container {\n      display: flex;\n      flex-direction: column;\n      gap: 8px;\n      max-height: 200px;\n      overflow-y: auto;\n      border: 1px solid var(--divider-color, #e0e0e0);\n      border-radius: 4px;\n      padding: 8px;\n    }\n\n    .checkbox-item {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n      padding: 4px 0;\n    }\n\n    .checkbox-label {\n      font-size: 0.9em;\n      color: var(--primary-text-color);\n      cursor: pointer;\n    }\n\n    .checkbox-item:hover {\n      background: var(--secondary-background-color, #f5f5f5);\n      border-radius: 4px;\n      padding: 4px 8px;\n      margin: 0 -8px;\n    }\n\n    .checkbox-list {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n      gap: 8px;\n      margin-top: 8px;\n    }\n\n    .help-text {\n      font-size: 0.8em;\n      color: var(--secondary-text-color);\n      margin-top: 4px;\n      font-style: italic;\n    }\n\n    .array-input {\n      display: flex;\n      flex-direction: column;\n      gap: 8px;\n    }\n\n    .array-item {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    }\n\n    .array-item ha-textfield {\n      flex: 1;\n    }\n\n    .remove-btn {\n      --mdc-theme-primary: var(--error-color, #f44336);\n    }\n  `;\n\n  setConfig(config: CardConfig): void {\n    this.config = config;\n  }\n\n  private _valueChanged(field: string, value: unknown): void {\n    if (!this.config) return;\n\n    const newConfig = { ...this.config, [field]: value };\n    this.config = newConfig;\n    this._fireConfigChanged();\n  }\n\n  private _fireConfigChanged(): void {\n    const event = new CustomEvent('config-changed', {\n      detail: { config: this.config },\n      bubbles: true,\n      composed: true,\n    });\n    this.dispatchEvent(event);\n  }\n\n  private _updateStringArray(field: string, values: string[]): void {\n    this._valueChanged(field, values);\n  }\n\n  private _addArrayItem(field: string): void {\n    const currentArray = ((this.config as Record<string, unknown>)?.[field] as string[]) || [];\n    this._updateStringArray(field, [...currentArray, '']);\n  }\n\n  private _removeArrayItem(field: string, index: number): void {\n    const currentArray = ((this.config as Record<string, unknown>)?.[field] as string[]) || [];\n    const newArray = currentArray.filter((_, i) => i !== index);\n    this._updateStringArray(field, newArray);\n  }\n\n  private _updateArrayItem(field: string, index: number, value: string): void {\n    const currentArray = ((this.config as Record<string, unknown>)?.[field] as string[]) || [];\n    const newArray = [...currentArray];\n    newArray[index] = value;\n    this._updateStringArray(field, newArray);\n  }\n\n  private _toggleFilterValue(field: string, value: string, checked: boolean): void {\n    const currentArray = ((this.config as Record<string, unknown>)?.[field] as string[]) || [];\n    let newArray: string[];\n\n    if (checked) {\n      newArray = currentArray.includes(value) ? currentArray : [...currentArray, value];\n    } else {\n      newArray = currentArray.filter((v: string) => v !== value);\n    }\n\n    this._updateStringArray(field, newArray);\n  }\n\n  private _getSummaryEntityOptions() {\n    if (!this.hass) return [];\n\n    const summaryEntities = Object.values(this.hass.states)\n      .filter((entity: HassEntity) => {\n        const entityId = entity.entity_id;\n        return (\n          entityId.startsWith('sensor.emergency_alerts') &&\n          (entityId.includes('summary') || entityId.includes('Summary'))\n        );\n      })\n      .sort((a, b) => a.entity_id.localeCompare(b.entity_id));\n\n    return summaryEntities.map(\n      entity => html`\n        <mwc-list-item value=\"${entity.entity_id}\">\n          ${entity.attributes?.friendly_name || entity.entity_id}\n        </mwc-list-item>\n      `\n    );\n  }\n\n  private _getSeverityOptions() {\n    return [\n      { value: 'critical', label: 'Critical' },\n      { value: 'warning', label: 'Warning' },\n      { value: 'info', label: 'Info' },\n    ];\n  }\n\n  private _getStatusOptions() {\n    return [\n      { value: 'active', label: 'Active' },\n      { value: 'acknowledged', label: 'Acknowledged' },\n      { value: 'snoozed', label: 'Snoozed' },\n      { value: 'escalated', label: 'Escalated' },\n      { value: 'resolved', label: 'Resolved' },\n    ];\n  }\n\n  private _getGroupOptions() {\n    if (!this.hass) return [];\n\n    const groups = new Set<string>();\n    Object.values(this.hass.states).forEach((entity: HassEntity) => {\n      const group = (entity.attributes as Record<string, unknown>)?.group;\n      if (typeof group === 'string') {\n        groups.add(group);\n      }\n    });\n\n    return Array.from(groups)\n      .sort()\n      .map(group => ({\n        value: group,\n        label: group.charAt(0).toUpperCase() + group.slice(1),\n      }));\n  }\n\n  private _renderMultiSelectEditor(\n    field: string,\n    label: string,\n    options: Array<{ value: string; label: string }>,\n    helpText?: string\n  ) {\n    const selectedValues = ((this.config as Record<string, unknown>)?.[field] as string[]) || [];\n\n    return html`\n      <div class=\"field\">\n        <label>${label}</label>\n        <div class=\"field-input\">\n          <div class=\"multi-select-container\">\n            ${options.map(\n              option => html`\n                <div class=\"checkbox-item\">\n                  <ha-checkbox\n                    .checked=${selectedValues.includes(option.value)}\n                    @change=${(e: Event) =>\n                      this._toggleFilterValue(\n                        field,\n                        option.value,\n                        (e.target as HTMLInputElement).checked\n                      )}\n                  ></ha-checkbox>\n                  <span class=\"checkbox-label\">${option.label}</span>\n                </div>\n              `\n            )}\n          </div>\n          ${helpText ? html`<div class=\"help-text\">${helpText}</div>` : ''}\n        </div>\n      </div>\n    `;\n  }\n\n  private _renderStringArrayEditor(field: string, label: string, helpText?: string) {\n    const values = ((this.config as Record<string, unknown>)?.[field] as string[]) || [];\n\n    return html`\n      <div class=\"field\">\n        <label>${label}</label>\n        <div class=\"field-input\">\n          <div class=\"array-input\">\n            ${values.map(\n              (value: string, index: number) => html`\n                <div class=\"array-item\">\n                  <ha-textfield\n                    .value=${value}\n                    @input=${(e: Event) =>\n                      this._updateArrayItem(field, index, (e.target as HTMLInputElement).value)}\n                    placeholder=\"Enter value...\"\n                  ></ha-textfield>\n                  <mwc-button\n                    class=\"remove-btn\"\n                    @click=${() => this._removeArrayItem(field, index)}\n                    outlined\n                  >\n                    Remove\n                  </mwc-button>\n                </div>\n              `\n            )}\n            <mwc-button @click=${() => this._addArrayItem(field)} outlined>\n              Add ${label.replace(/s$/, '')}\n            </mwc-button>\n          </div>\n          ${helpText ? html`<div class=\"help-text\">${helpText}</div>` : ''}\n        </div>\n      </div>\n    `;\n  }\n\n  render() {\n    if (!this.config) {\n      return html``;\n    }\n\n    return html`\n      <div class=\"editor\">\n        <!-- Basic Configuration -->\n        <div class=\"section\">\n          <div class=\"section-header\">Basic Configuration</div>\n\n          <div class=\"field\">\n            <label>Summary Entity</label>\n            <div class=\"field-input\">\n              <ha-select\n                .value=${this.config.summary_entity || ''}\n                @change=${(e: Event) =>\n                  this._valueChanged('summary_entity', (e.target as HTMLSelectElement).value)}\n              >\n                <mwc-list-item value=\"\">Auto-detect (recommended)</mwc-list-item>\n                ${this._getSummaryEntityOptions()}\n              </ha-select>\n              <div class=\"help-text\">Optional: Entity that provides summary information</div>\n            </div>\n          </div>\n\n          <div class=\"field\">\n            <label>Group By</label>\n            <div class=\"field-input\">\n              <ha-select\n                .value=${this.config.group_by || 'severity'}\n                @change=${(e: Event) =>\n                  this._valueChanged('group_by', (e.target as HTMLSelectElement).value)}\n              >\n                <mwc-list-item value=\"severity\">Severity</mwc-list-item>\n                <mwc-list-item value=\"group\">Group</mwc-list-item>\n                <mwc-list-item value=\"status\">Status</mwc-list-item>\n                <mwc-list-item value=\"none\">None</mwc-list-item>\n              </ha-select>\n            </div>\n          </div>\n\n          <div class=\"field\">\n            <label>Sort By</label>\n            <div class=\"field-input\">\n              <ha-select\n                .value=${this.config.sort_by || 'first_triggered'}\n                @change=${(e: Event) =>\n                  this._valueChanged('sort_by', (e.target as HTMLSelectElement).value)}\n              >\n                <mwc-list-item value=\"first_triggered\">First Triggered</mwc-list-item>\n                <mwc-list-item value=\"severity\">Severity</mwc-list-item>\n                <mwc-list-item value=\"name\">Name</mwc-list-item>\n                <mwc-list-item value=\"group\">Group</mwc-list-item>\n              </ha-select>\n            </div>\n          </div>\n        </div>\n\n        <!-- Display Options -->\n        <div class=\"section\">\n          <div class=\"section-header\">Display Options</div>\n\n          <div class=\"field\">\n            <label>Show Acknowledged Alerts</label>\n            <ha-switch\n              .checked=${this.config.show_acknowledged ?? true}\n              @change=${(e: Event) =>\n                this._valueChanged('show_acknowledged', (e.target as HTMLInputElement).checked)}\n            ></ha-switch>\n          </div>\n\n          <div class=\"field\">\n            <label>Show Snoozed Alerts</label>\n            <ha-switch\n              .checked=${this.config.show_snoozed ?? true}\n              @change=${(e: Event) =>\n                this._valueChanged('show_snoozed', (e.target as HTMLInputElement).checked)}\n            ></ha-switch>\n          </div>\n\n          <div class=\"field\">\n            <label>Show Resolved Alerts</label>\n            <ha-switch\n              .checked=${this.config.show_resolved ?? false}\n              @change=${(e: Event) =>\n                this._valueChanged('show_resolved', (e.target as HTMLInputElement).checked)}\n            ></ha-switch>\n          </div>\n\n          <div class=\"field\">\n            <label>Show Escalated Alerts</label>\n            <ha-switch\n              .checked=${this.config.show_escalated ?? true}\n              @change=${(e: Event) =>\n                this._valueChanged('show_escalated', (e.target as HTMLInputElement).checked)}\n            ></ha-switch>\n          </div>\n\n          <div class=\"field\">\n            <label>Compact Mode</label>\n            <ha-switch\n              .checked=${this.config.compact_mode ?? false}\n              @change=${(e: Event) =>\n                this._valueChanged('compact_mode', (e.target as HTMLInputElement).checked)}\n            ></ha-switch>\n          </div>\n\n          <div class=\"field\">\n            <label>Show Timestamps</label>\n            <ha-switch\n              .checked=${this.config.show_timestamps ?? true}\n              @change=${(e: Event) =>\n                this._valueChanged('show_timestamps', (e.target as HTMLInputElement).checked)}\n            ></ha-switch>\n          </div>\n\n          <div class=\"field\">\n            <label>Show Group Labels</label>\n            <ha-switch\n              .checked=${this.config.show_group_labels ?? true}\n              @change=${(e: Event) =>\n                this._valueChanged('show_group_labels', (e.target as HTMLInputElement).checked)}\n            ></ha-switch>\n          </div>\n\n          <div class=\"field\">\n            <label>Show Severity Icons</label>\n            <ha-switch\n              .checked=${this.config.show_severity_icons ?? true}\n              @change=${(e: Event) =>\n                this._valueChanged('show_severity_icons', (e.target as HTMLInputElement).checked)}\n            ></ha-switch>\n          </div>\n\n          <div class=\"field\">\n            <label>Max Alerts Per Group</label>\n            <div class=\"field-input\">\n              <ha-textfield\n                type=\"number\"\n                .value=${String(this.config.max_alerts_per_group || 10)}\n                @input=${(e: Event) =>\n                  this._valueChanged(\n                    'max_alerts_per_group',\n                    parseInt((e.target as HTMLInputElement).value) || 10\n                  )}\n                min=\"1\"\n                max=\"100\"\n              ></ha-textfield>\n            </div>\n          </div>\n        </div>\n\n        <!-- Action Buttons -->\n        <div class=\"section\">\n          <div class=\"section-header\">Action Buttons</div>\n\n          <div class=\"field\">\n            <label>Show Acknowledge Button</label>\n            <ha-switch\n              .checked=${this.config.show_acknowledge_button ?? true}\n              @change=${(e: Event) =>\n                this._valueChanged(\n                  'show_acknowledge_button',\n                  (e.target as HTMLInputElement).checked\n                )}\n            ></ha-switch>\n          </div>\n\n          <div class=\"field\">\n            <label>Show Snooze Button</label>\n            <ha-switch\n              .checked=${this.config.show_snooze_button ?? true}\n              @change=${(e: Event) =>\n                this._valueChanged('show_snooze_button', (e.target as HTMLInputElement).checked)}\n            ></ha-switch>\n          </div>\n\n          <div class=\"field\">\n            <label>Show Resolve Button</label>\n            <ha-switch\n              .checked=${this.config.show_resolve_button ?? true}\n              @change=${(e: Event) =>\n                this._valueChanged('show_resolve_button', (e.target as HTMLInputElement).checked)}\n            ></ha-switch>\n          </div>\n\n          <div class=\"field\">\n            <label>Button Style</label>\n            <div class=\"field-input\">\n              <ha-select\n                .value=${this.config.button_style || 'compact'}\n                @change=${(e: Event) =>\n                  this._valueChanged('button_style', (e.target as HTMLSelectElement).value)}\n              >\n                <mwc-list-item value=\"compact\">Compact</mwc-list-item>\n                <mwc-list-item value=\"full\">Full</mwc-list-item>\n                <mwc-list-item value=\"icons_only\">Icons Only</mwc-list-item>\n              </ha-select>\n            </div>\n          </div>\n        </div>\n\n        <!-- Filtering -->\n        <div class=\"section\">\n          <div class=\"section-header\">Filtering</div>\n\n          ${this._renderMultiSelectEditor(\n            'severity_filter',\n            'Severity Filter',\n            this._getSeverityOptions(),\n            'Select which severity levels to show (leave all unchecked to show all)'\n          )}\n          ${this._renderMultiSelectEditor(\n            'group_filter',\n            'Group Filter',\n            this._getGroupOptions(),\n            'Select which alert groups to show (leave all unchecked to show all)'\n          )}\n          ${this._renderMultiSelectEditor(\n            'status_filter',\n            'Status Filter',\n            this._getStatusOptions(),\n            'Select which statuses to show (leave all unchecked to show all)'\n          )}\n        </div>\n\n        <!-- Advanced Options -->\n        <div class=\"section\">\n          <div class=\"section-header\">Advanced Options</div>\n\n          ${this._renderStringArrayEditor(\n            'entity_patterns',\n            'Entity Patterns',\n            'Patterns to match emergency alert entities (use * for wildcards)'\n          )}\n\n          <div class=\"field\">\n            <label>Refresh Interval (seconds)</label>\n            <div class=\"field-input\">\n              <ha-textfield\n                type=\"number\"\n                .value=${String(this.config.refresh_interval || 30)}\n                @input=${(e: Event) =>\n                  this._valueChanged(\n                    'refresh_interval',\n                    parseInt((e.target as HTMLInputElement).value) || 30\n                  )}\n                min=\"5\"\n                max=\"300\"\n              ></ha-textfield>\n              <div class=\"help-text\">How often to refresh alert data (5-300 seconds)</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n}\n\n// Register the custom elements\ncustomElements.define('emergency-alerts-card', EmergencyAlertsCard);\ncustomElements.define('emergency-alerts-card-editor', EmergencyAlertsCardEditor);\n\n// Declare types for Home Assistant\ndeclare global {\n  interface Window {\n    customCards: Array<{\n      type: string;\n      name: string;\n      description: string;\n    }>;\n  }\n}\n\n// Register with Home Assistant\n(window.customCards = window.customCards || []).push({\n  type: 'custom:emergency-alerts-card',\n  name: 'Emergency Alerts Card',\n  description: 'A card to display emergency alerts from the Emergency Alerts integration',\n});\n","/**\n * Formatting utilities for Emergency Alerts Card\n */\n\n/**\n * Formats an ISO timestamp into a human-readable \"time ago\" string\n * @param iso ISO 8601 timestamp string\n * @returns Formatted string like \"5m ago\" or \"2h ago\"\n */\nexport function formatTimeAgo(iso: string): string {\n  if (!iso) return '';\n\n  const now = new Date();\n  const then = new Date(iso);\n  const diffMs = now.getTime() - then.getTime();\n  const diffMins = Math.floor(diffMs / (1000 * 60));\n  const diffHours = Math.floor(diffMins / 60);\n\n  if (diffMins < 1) return 'just now';\n  if (diffMins < 60) return `${diffMins}m ago`;\n  return `${diffHours}h ago`;\n}\n\n/**\n * Gets the Material Design icon name for a severity level\n * @param severity Alert severity level\n * @returns MDI icon name\n */\nexport function getSeverityIcon(severity: string): string {\n  switch (severity) {\n    case 'critical':\n      return 'mdi:alert-circle';\n    case 'warning':\n      return 'mdi:alert';\n    case 'info':\n      return 'mdi:information';\n    default:\n      return 'mdi:help-circle';\n  }\n}\n\n/**\n * Gets the color hex code for a severity level\n * @param severity Alert severity level\n * @returns Hex color code\n */\nexport function getSeverityColor(severity: string): string {\n  switch (severity) {\n    case 'critical':\n      return '#f44336';\n    case 'warning':\n      return '#ff9800';\n    case 'info':\n      return '#2196f3';\n    default:\n      return '#9e9e9e';\n  }\n}\n\n/**\n * Capitalizes the first letter of a string\n * @param str Input string\n * @returns Capitalized string\n */\nexport function capitalize(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n/**\n * Gets a human-readable title for a group\n * @param group Group name\n * @param groupBy Grouping strategy being used\n * @returns Formatted group title\n */\nexport function getGroupTitle(group: string, groupBy: string): string {\n  if (groupBy === 'none') {\n    return 'All Alerts';\n  }\n  return capitalize(group);\n}\n\n/**\n * Formats snooze_until timestamp into a static display (v2.0)\n * @param snooze_until ISO 8601 timestamp when snooze expires\n * @returns Formatted string like \"until 2:30 PM\" or empty if not snoozed\n */\nexport function formatSnoozeTime(snooze_until?: string): string {\n  if (!snooze_until) return '';\n\n  const snoozeDate = new Date(snooze_until);\n  const timeStr = snoozeDate.toLocaleTimeString([], {\n    hour: 'numeric',\n    minute: '2-digit',\n  });\n\n  return `until ${timeStr}`;\n}\n"],"names":["t","globalThis","e","ShadowRoot","ShadyCSS","nativeShadow","Document","prototype","CSSStyleSheet","s","Symbol","o","WeakMap","n$2","constructor","this","_$cssResult$","Error","cssText","styleSheet","length","get","replaceSync","set","toString","i","reduce","n","c","cssRules","r","is","defineProperty","getOwnPropertyDescriptor","h","getOwnPropertyNames","getOwnPropertySymbols","getPrototypeOf","Object","a","trustedTypes","l","emptyScript","p","reactiveElementPolyfillSupport","d","u","toAttribute","Boolean","Array","JSON","stringify","fromAttribute","Number","parse","f","b","attribute","type","String","converter","reflect","useDefault","hasChanged","metadata","litPropertyMetadata","y$1","HTMLElement","addInitializer","_$Ei","push","observedAttributes","finalize","_$Eh","keys","createProperty","state","hasOwnProperty","create","wrapped","elementProperties","noAccessor","getPropertyDescriptor","call","requestUpdate","configurable","enumerable","getPropertyOptions","Map","finalized","properties","_$Eu","elementStyles","finalizeStyles","styles","isArray","Set","flat","reverse","unshift","toLowerCase","super","_$Ep","isUpdatePending","hasUpdated","_$Em","_$Ev","_$ES","Promise","enableUpdating","_$AL","_$E_","forEach","addController","_$EO","add","renderRoot","isConnected","hostConnected","removeController","delete","size","createRenderRoot","shadowRoot","attachShadow","shadowRootOptions","adoptedStyleSheets","map","document","createElement","litNonce","setAttribute","textContent","appendChild","connectedCallback","disconnectedCallback","hostDisconnected","attributeChangedCallback","_$AK","_$ET","removeAttribute","_$Ej","hasAttribute","C","_$EP","has","_$Eq","reject","scheduleUpdate","performUpdate","shouldUpdate","willUpdate","hostUpdate","update","_$EM","_$AE","hostUpdated","firstUpdated","updated","updateComplete","getUpdateComplete","y","mode","ReactiveElement","reactiveElementVersions","createPolicy","createHTML","Math","random","toFixed","slice","createComment","v","_","m","RegExp","g","$","x","_$litType$","strings","values","T","for","E","A","createTreeWalker","P","V","lastIndex","exec","test","startsWith","N","parts","el","currentNode","content","firstChild","replaceWith","childNodes","nextNode","nodeType","hasAttributes","getAttributeNames","endsWith","getAttribute","split","index","name","ctor","H","I","L","k","tagName","append","data","indexOf","innerHTML","S","_$Co","_$Cl","_$litDirective$","_$AO","_$AT","_$AS","M","_$AV","_$AN","_$AD","_$AM","parentNode","_$AU","creationScope","importNode","R","nextSibling","z","_$AI","_$Cv","_$AH","_$AA","_$AB","options","startNode","endNode","_$AR","iterator","O","insertBefore","createTextNode","_$AC","_$AP","remove","setConnected","element","fill","j","arguments","toggleAttribute","capture","once","passive","removeEventListener","addEventListener","handleEvent","host","litHtmlPolyfillSupport","litHtmlVersions","renderOptions","_$Do","renderBefore","render","_$litPart$","_$litElement$","litElementHydrateSupport","LitElement","litElementPolyfillSupport","litElementVersions","cardStyles","css","AlertService","hass","onError","_convertToSwitchId","entity_id","switchType","switchId","replace","handleError","action","error","message","console","acknowledge","callService","snooze","resolve","updateHass","setErrorCallback","callback","matchesEntityPattern","entityId","patterns","patternCache","some","pattern","includes","regex","SEVERITY_ORDER","critical","warning","info","groupAlerts","alerts","config","group_by","grouped","alert","group","groupAlertsByGroup","active","acknowledged","snoozed","escalated","resolved","status","groupAlertsByStatus","all","groupAlertsNone","severity","groupAlertsBySeverity","getAlertStatus","entity","attrs","attributes","hasEmergencyAttributes","entityToAlert","friendly_name","first_triggered","last_cleared","snooze_until","discoverAlertEntities","hassStates","alertEntities","matchesPattern","EmergencyAlertsCard","loadingActions","lastStatesHash","currentError","setConfig","show_acknowledged","show_snoozed","show_resolved","show_escalated","sort_by","severity_filter","group_filter","status_filter","compact_mode","show_timestamps","show_group_labels","show_severity_icons","show_status_badge","max_alerts_per_group","show_acknowledge_button","show_snooze_button","show_resolve_button","button_style","entity_patterns","refresh_interval","_startAutoRefresh","changedProps","alertService","_handleError","bind","_hasRelevantChanges","_updateAlerts","states","currentHash","last_updated","sort","join","hasChanges","filteredAlerts","filter","shouldShowAlert","aTime","Date","getTime","undefined","localeCompare","refreshInterval","clearInterval","window","setInterval","setTimeout","_dismissError","_handleAcknowledge","_handleResolve","_handleSnooze","_shouldShowActions","_alert","_formatSnoozeTime","toLocaleTimeString","hour","minute","_renderStatusBadge","html","toUpperCase","totalActive","cardClass","_renderErrorNotification","_renderAlerts","entries","_renderAlertGroup","groupCount","groupBy","getGroupCount","groupTitle","str","charAt","getGroupTitle","severityClass","maxAlerts","displayAlerts","_renderAlert","classes","_renderAlertIcon","_renderAlertContent","_renderAlertActions","getSeverityIcon","getSeverityColor","iso","now","then","diffMs","diffMins","floor","diffHours","formatTimeAgo","isLoading","_renderAcknowledgeButton","_renderSnoozeButton","_renderResolveButton","isActive","label","getStubConfig","summary_entity","getConfigElement","EmergencyAlertsCardEditor","_valueChanged","field","value","newConfig","_fireConfigChanged","event","CustomEvent","detail","bubbles","composed","dispatchEvent","_updateStringArray","_addArrayItem","currentArray","_removeArrayItem","newArray","_updateArrayItem","_toggleFilterValue","checked","_getSummaryEntityOptions","summaryEntities","_getSeverityOptions","_getStatusOptions","_getGroupOptions","groups","from","_renderMultiSelectEditor","helpText","selectedValues","option","target","_renderStringArrayEditor","parseInt","customElements","define","customCards","description"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}